# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build 
  jobs:
  - job: FirstJob 
    steps:
    - bash: echo Build first job 
    - bash: echo $(PipelineLevelVariable)
    - bash: echo $(Build.BuildNumber)
    - bash: echo $(Build.BuildId)
    - bash: echo $(Build.SourceBranchName)
    - bash: echo $(Build.SourcesDirectory)
    - bash: echo $(System.DefaultWorkingDirectory)
    - bash: ls -R $(System.DefaultWorkingDirectory)
    - bash: echo $(Build.ArtifactStagingDirectory)
    - bash: java -version 
    - bash: node --version 
    - bash: python --version 
    - bash: mvn -version
    - bash: ls -R $(Build.ArtifactStagingDirectory)
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **/*.yaml
          **/*.tf
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - bash: ls -R $(Build.ArtifactStagingDirectory)    

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

  # - job: secondJob 
  #   steps:
  #   - bash: echo Build second job 
# - stage: DevDeploy
#   variables: 
#    environment: Dev Envt 
#   dependsOn: Build
#   jobs:
#   - job: DevDeployJob 
#     steps:
#     - bash: echo $(environment) Job 
# - stage: QADeply
#   variables: 
#    environment: QA Envt 
#   dependsOn: Build

#   jobs:
#   - job: QADeployJob 
#     steps:
#     - bash: echo $(environment) Job 
# - stage: ProdDeply
#   variables: 
#    environment: Prod Envt
#   dependsOn:
#   - QADeply
#   - DevDeploy
#   jobs:
#   - job: ProdDeployJob 
#     steps:
#     - bash: echo $(environment) Job 


